{"ast":null,"code":"var _jsxFileName = \"/Users/savanna/Desktop/stage4/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [GenreId, setGenreId] = useState(0);\n  const [GenreType, setGenreType] = useState('');\n  const [searchGenreTypeList, setsearchGenreTypeList] = useState('');\n  const [GenreTypeList, setGenreTypeList] = useState([]);\n  const [GenreTypeList1, setGenreTypeList1] = useState([]);\n  const [favList, setFavList] = useState([]);\n  const [newGenreType, setNewGenreType] = useState(\"\");\n  useEffect(() => {\n    Axios.get('http://localhost:3002/api/get').then(response => {\n      setGenreTypeList(response.data);\n    });\n  }, []); //review = type\n\n  const submitGenreType = () => {\n    Axios.post('http://localhost:3002/api/insert', {\n      GenreId: GenreId,\n      GenreType: GenreType\n    });\n    setGenreTypeList([...GenreTypeList, {\n      GenreId: GenreId,\n      GenreType: GenreType\n    }]);\n  };\n\n  const searchGenreType = () => {\n    Axios.post('http://localhost:3002/api/search', {\n      GenreType: searchGenreTypeList\n    }).then(response => {\n      setGenreTypeList1(response.data);\n    });\n  };\n\n  const findActorDirector = () => {\n    Axios.get('http://localhost:3002/api/find').then(response => {\n      setFavList(response.data);\n    });\n  };\n\n  const deleteGenreType = GenreId => {\n    Axios.delete(`http://localhost:3002/api/delete/${GenreId}`);\n  };\n\n  const updateGenreType = GenreId => {\n    Axios.put(`http://localhost:3002/api/update`, {\n      GenreId: GenreId,\n      GenreType: newGenreType\n    });\n    setNewGenreType(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" CRUD APPLICATIONS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Actor Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"movieName\",\n        onChange: e => {\n          setGenreId(parseInt(e.target.value));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Actor Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Review\",\n        onChange: e => {\n          setGenreType(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitGenreType,\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), movieReviewList.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" Genre Id: \", val.GenreId, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Genre Type: \", val.GenreType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteGenreType(val.GenreId);\n            },\n            children: \" Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"updateInput\",\n            onChange: e => {\n              setNewGenreType(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateGenreType(val.GenreId);\n            },\n            children: \" Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Search Actor Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"searchActorList\",\n        onChange: e => {\n          setsearchGenreTypeList(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchGenreType,\n        children: \" Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), GenreTypeList1.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" Actor Id: \", val.GenreId, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Actor Name: \", val.GenreType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteGenreType(val.ActorId);\n            },\n            children: \" Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"updateInput\",\n            onChange: e => {\n              setNewGenreType(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateGenreType(val.ActorId);\n            },\n            children: \" Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Find users' top favorite actors and directors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: findActorDirector,\n        children: \" Find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"top favorite actors and directors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), favList.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [val.Name, \"  \", val.Count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this);\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LpBqEMTNRNl/HUdkPY27aeihb6g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/savanna/Desktop/stage4/frontend/src/App.js"],"names":["React","useState","useEffect","Axios","App","GenreId","setGenreId","GenreType","setGenreType","searchGenreTypeList","setsearchGenreTypeList","GenreTypeList","setGenreTypeList","GenreTypeList1","setGenreTypeList1","favList","setFavList","newGenreType","setNewGenreType","get","then","response","data","submitGenreType","post","searchGenreType","findActorDirector","deleteGenreType","delete","updateGenreType","put","e","parseInt","target","value","movieReviewList","map","val","ActorId","Name","Count"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACgB,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC5DT,MAAAA,gBAAgB,CAACS,QAAQ,CAACC,IAAV,CAAhB;AACD,KAFD;AAGD,GAJQ,EAIP,EAJO,CAAT,CATa,CAcf;;AACE,QAAMC,eAAe,GAAG,MAAM;AAC5BpB,IAAAA,KAAK,CAACqB,IAAN,CAAW,kCAAX,EAA+C;AAC7CnB,MAAAA,OAAO,EAAEA,OADoC;AAE7CE,MAAAA,SAAS,EAAEA;AAFkC,KAA/C;AAKAK,IAAAA,gBAAgB,CAAC,CACf,GAAGD,aADY,EAEf;AACEN,MAAAA,OAAO,EAAEA,OADX;AAEEE,MAAAA,SAAS,EAAEA;AAFb,KAFe,CAAD,CAAhB;AAOD,GAbD;;AAeA,QAAMkB,eAAe,GAAG,MAAM;AAC5BtB,IAAAA,KAAK,CAACqB,IAAN,CAAW,kCAAX,EAA+C;AAC7CjB,MAAAA,SAAS,EAAEE;AADkC,KAA/C,EAEGW,IAFH,CAESC,QAAD,IAAc;AAACP,MAAAA,iBAAiB,CAACO,QAAQ,CAACC,IAAV,CAAjB;AAAiC,KAFxD;AAGD,GAJD;;AAMA,QAAMI,iBAAiB,GAAG,MAAM;AAC9BvB,IAAAA,KAAK,CAACgB,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAkDC,QAAD,IACjD;AAACL,MAAAA,UAAU,CAACK,QAAQ,CAACC,IAAV,CAAV;AAA0B,KAD3B;AAED,GAHD;;AAKA,QAAMK,eAAe,GAAItB,OAAD,IAAa;AACnCF,IAAAA,KAAK,CAACyB,MAAN,CAAc,oCAAmCvB,OAAQ,EAAzD;AACD,GAFD;;AAIA,QAAMwB,eAAe,GAAIxB,OAAD,IAAa;AACnCF,IAAAA,KAAK,CAAC2B,GAAN,CAAW,kCAAX,EAA8C;AAC5CzB,MAAAA,OAAO,EAAEA,OADmC;AAE5CE,MAAAA,SAAS,EAAEU;AAFiC,KAA9C;AAIAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,WAAxB;AAAoC,QAAA,QAAQ,EAAGa,CAAD,IAAO;AACnDzB,UAAAA,UAAU,CAAC0B,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT,CAAV;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,QAAQ,EAAGH,CAAD,IAAO;AAChDvB,UAAAA,YAAY,CAACuB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAZ;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,cANF,eAUE;AAAQ,QAAA,OAAO,EAAEX,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAYGY,eAAe,CAACC,GAAhB,CAAqBC,GAAD,IAAS;AAC5B,4BACE;AAAK,UAAA,SAAS,EAAG,MAAjB;AAAA,kCACE;AAAA,sCAAgBA,GAAG,CAAChC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,uCAAgBgC,GAAG,CAAC9B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,OAAO,EAAE,MAAM;AAAEoB,cAAAA,eAAe,CAACU,GAAG,CAAChC,OAAL,CAAf;AAA8B,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,aAAtB;AAAoC,YAAA,QAAQ,EAAG0B,CAAD,IAAO;AACnDb,cAAAA,eAAe,CAACa,CAAC,CAACE,MAAF,CAASC,KAAV,CAAf;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAQ,YAAA,OAAO,EAAE,MAAM;AAAEL,cAAAA,eAAe,CAACQ,GAAG,CAAChC,OAAL,CAAf;AAA8B,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAYA;AACD,OAdA,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAmCE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,iBAAxB;AAA0C,QAAA,QAAQ,EAAG0B,CAAD,IAAO;AACzDrB,UAAAA,sBAAsB,CAACqB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAtB;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAQ,QAAA,OAAO,EAAET,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAQGZ,cAAc,CAACuB,GAAf,CAAoBC,GAAD,IAAS;AAC3B,4BACE;AAAK,UAAA,SAAS,EAAG,MAAjB;AAAA,kCACE;AAAA,sCAAgBA,GAAG,CAAChC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,uCAAgBgC,GAAG,CAAC9B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,OAAO,EAAE,MAAM;AAAEoB,cAAAA,eAAe,CAACU,GAAG,CAACC,OAAL,CAAf;AAA8B,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,aAAtB;AAAoC,YAAA,QAAQ,EAAGP,CAAD,IAAO;AACnDb,cAAAA,eAAe,CAACa,CAAC,CAACE,MAAF,CAASC,KAAV,CAAf;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAQ,YAAA,OAAO,EAAE,MAAM;AAAEL,cAAAA,eAAe,CAACQ,GAAG,CAACC,OAAL,CAAf;AAA8B,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAYA;AACD,OAdA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF,eA4DE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAQ,QAAA,OAAO,EAAEZ,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAQGX,OAAO,CAACqB,GAAR,CAAaC,GAAD,IAAS;AACpB,4BACE;AAAA,qBAAKA,GAAG,CAACE,IAAT,QAAiBF,GAAG,CAACG,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGA;AACD,OALA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,YA5DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgFD;;GArIQpC,G;;KAAAA,G;AAuIT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from \"react\";\nimport Axios from 'axios';\n\nfunction App() {\n  const [GenreId, setGenreId] = useState(0);\n  const [GenreType, setGenreType] = useState('');\n  const [searchGenreTypeList, setsearchGenreTypeList] = useState('');\n  const [GenreTypeList, setGenreTypeList] = useState([]);\n  const [GenreTypeList1, setGenreTypeList1] = useState([]);\n  const [favList, setFavList] = useState([]);\n  const [newGenreType, setNewGenreType] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get('http://localhost:3002/api/get').then((response) => {\n      setGenreTypeList(response.data)\n    })\n  },[])\n//review = type\n  const submitGenreType = () => { \n    Axios.post('http://localhost:3002/api/insert', {\n      GenreId: GenreId,\n      GenreType: GenreType\n    });\n    \n    setGenreTypeList([\n      ...GenreTypeList,\n      {\n        GenreId: GenreId,\n        GenreType: GenreType\n      },\n    ]);\n  };\n\n  const searchGenreType = () => { \n    Axios.post('http://localhost:3002/api/search', {\n      GenreType: searchGenreTypeList\n    }).then((response) => {setGenreTypeList1(response.data)});\n  };\n\n  const findActorDirector = () => { \n    Axios.get('http://localhost:3002/api/find').then((response) => \n    {setFavList(response.data)});\n  };\n\n  const deleteGenreType = (GenreId) => {\n    Axios.delete(`http://localhost:3002/api/delete/${GenreId}`);\n  };\n\n  const updateGenreType = (GenreId) => {\n    Axios.put(`http://localhost:3002/api/update`, {\n      GenreId: GenreId,\n      GenreType: newGenreType\n    });\n    setNewGenreType(\"\")\n  };\n\n  return (\n    <div className=\"App\">\n      <h1> CRUD APPLICATIONS</h1>\n\n      <div className=\"form\">\n        <label> Actor Id:</label>\n        <input type=\"text\" name=\"movieName\" onChange={(e) => {\n          setGenreId(parseInt(e.target.value))\n        } }/>\n        <label> Actor Name:</label>\n        <input type=\"text\" name=\"Review\" onChange={(e) => {\n          setGenreType(e.target.value)\n        }}/>\n        \n        <button onClick={submitGenreType}> Submit</button>\n\n        {movieReviewList.map((val) => {\n          return (\n            <div className = \"card\">\n              <h1> Genre Id: {val.GenreId} </h1>\n              <p>Genre Type: {val.GenreType}</p>\n              <button onClick={() => { deleteGenreType(val.GenreId) }}> Delete</button>\n              <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n                setNewGenreType(e.target.value)\n              } }/>\n              <button onClick={() => { updateGenreType(val.GenreId) }}> Update</button>\n              </div>\n          );\n          \n          ;\n        })}\n        \n        \n\n      </div>\n\n      <div className=\"form\">\n        <label> Search Actor Name:</label>\n        <input type=\"text\" name=\"searchActorList\" onChange={(e) => {\n          setsearchGenreTypeList(e.target.value)\n        }}/>\n        \n        <button onClick={searchGenreType}> Search</button>\n\n        {GenreTypeList1.map((val) => {\n          return (\n            <div className = \"card\">\n              <h1> Actor Id: {val.GenreId} </h1>\n              <p>Actor Name: {val.GenreType}</p>\n              <button onClick={() => { deleteGenreType(val.ActorId) }}> Delete</button>\n              <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n                setNewGenreType(e.target.value)\n              } }/>\n              <button onClick={() => { updateGenreType(val.ActorId) }}> Update</button>\n              </div>\n          );\n          \n          ;\n        })}\n      </div>\n\n      <div className=\"form\">\n\n        <label>Find users' top favorite actors and directors</label>\n        \n        <button onClick={findActorDirector}> Find</button>\n\n        <h2>top favorite actors and directors</h2>\n\n        {favList.map((val) => {\n          return (\n            <h5>{val.Name}  {val.Count}</h5>\n          );         \n          ;\n        })}\n      </div>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}