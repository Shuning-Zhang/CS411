{"ast":null,"code":"var _jsxFileName = \"/Users/savanna/Desktop/stage4/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movieName, setMovieName] = useState(0);\n  const [Review, setReview] = useState('');\n  const [searchGenreList, setSearchGenre] = useState('');\n  const [movieReviewList, setMovieReviewList] = useState([]);\n  const [GenreList, setGenreList] = useState([]);\n  const [favList, setFavList] = useState([]);\n  const [newReview, setNewReview] = useState(\"\");\n  useEffect(() => {\n    Axios.get('http://localhost:3002/api/get').then(response => {\n      setMovieReviewList(response.data);\n    });\n  }, []);\n\n  const submitReview = () => {\n    Axios.post('http://localhost:3002/api/insert', {\n      GenreId: movieName,\n      GenreType: Review\n    });\n    setMovieReviewList([...movieReviewList, {\n      GenreId: movieName,\n      GenreType: Review\n    }]);\n  };\n\n  const searchGenre = () => {\n    Axios.post('http://localhost:3002/api/search', {\n      GenreType: searchGenreList\n    }).then(response => {\n      setGenreList(response.data);\n    });\n  };\n\n  const findActorDirector = () => {\n    Axios.get('http://localhost:3002/api/find').then(response => {\n      setFavList(response.data);\n    });\n  };\n\n  const deleteReview = GenreId => {\n    Axios.delete(`http://localhost:3002/api/delete/${GenreId}`);\n  };\n\n  const updateReview = movieName => {\n    Axios.put(`http://localhost:3002/api/update`, {\n      GenerId: movieName,\n      GenreType: newReview\n    });\n    setNewReview(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" CRUD APPLICATIONS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Genre Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"movieName\",\n        onChange: e => {\n          setMovieName(parseInt(e.target.value));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Genre Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Review\",\n        onChange: e => {\n          setReview(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitReview,\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), movieReviewList.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" Genre Id: \", val.GenreId, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Genre Type: \", val.GenreType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteReview(val.GenreId);\n            },\n            children: \" Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"updateInput\",\n            onChange: e => {\n              setNewReview(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateReview(val.GenreId);\n            },\n            children: \" Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Search Genre Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"searchGenreList\",\n        onChange: e => {\n          setSearchGenre(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchGenre,\n        children: \" Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), GenreList.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" Genre Id: \", val.GenreId, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Genre Type: \", val.GenreType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteReview(val.GenreId);\n            },\n            children: \" Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"updateInput\",\n            onChange: e => {\n              setNewReview(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateReview(val.GenreId);\n            },\n            children: \" Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Find movies' top favorite genre type and frequencies in this dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: findActorDirector,\n        children: \" Find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Most Used Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), favList.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [val.GenreType, \"  \", val.freq]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this);\n        ;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PujX/78HmwyUnrIJixMICNOcmkI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/savanna/Desktop/stage4/frontend/src/App.js"],"names":["React","useState","useEffect","Axios","App","movieName","setMovieName","Review","setReview","searchGenreList","setSearchGenre","movieReviewList","setMovieReviewList","GenreList","setGenreList","favList","setFavList","newReview","setNewReview","get","then","response","data","submitReview","post","GenreId","GenreType","searchGenre","findActorDirector","deleteReview","delete","updateReview","put","GenerId","e","parseInt","target","value","map","val","freq"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from \"react\";\nimport Axios from 'axios';\n\nfunction App() {\n  const [movieName, setMovieName] = useState(0);\n  const [Review, setReview] = useState('');\n  const [searchGenreList, setSearchGenre] = useState('');\n  const [movieReviewList, setMovieReviewList] = useState([]);\n  const [GenreList, setGenreList] = useState([]);\n  const [favList, setFavList] = useState([]);\n  const [newReview, setNewReview] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get('http://localhost:3002/api/get').then((response) => {\n      setMovieReviewList(response.data)\n    })\n  },[])\n\n  const submitReview = () => { \n    Axios.post('http://localhost:3002/api/insert', {\n      GenreId: movieName,\n      GenreType: Review\n    });\n    \n    setMovieReviewList([\n      ...movieReviewList,\n      {\n        GenreId: movieName,\n        GenreType: Review\n      },\n    ]);\n  };\n\n  const searchGenre = () => { \n    Axios.post('http://localhost:3002/api/search', {\n      GenreType: searchGenreList\n    }).then((response) => {setGenreList(response.data)});\n  };\n\n  const findActorDirector = () => { \n    Axios.get('http://localhost:3002/api/find').then((response) => \n    {setFavList(response.data)});\n  };\n\n  const deleteReview = (GenreId) => {\n    Axios.delete(`http://localhost:3002/api/delete/${GenreId}`);\n  };\n\n  const updateReview = (movieName) => {\n    Axios.put(`http://localhost:3002/api/update`, {\n      GenerId: movieName,\n      GenreType: newReview\n    });\n    setNewReview(\"\")\n  };\n\n  return (\n    <div className=\"App\">\n      <h1> CRUD APPLICATIONS</h1>\n\n      <div className=\"form\">\n        <label> Genre Id:</label>\n        <input type=\"text\" name=\"movieName\" onChange={(e) => {\n          setMovieName(parseInt(e.target.value))\n        } }/>\n        <label> Genre Type:</label>\n        <input type=\"text\" name=\"Review\" onChange={(e) => {\n          setReview(e.target.value)\n        }}/>\n        \n        <button onClick={submitReview}> Submit</button>\n\n        {movieReviewList.map((val) => {\n          return (\n            <div className = \"card\">\n              <h1> Genre Id: {val.GenreId} </h1>\n              <p>Genre Type: {val.GenreType}</p>\n              <button onClick={() => { deleteReview(val.GenreId) }}> Delete</button>\n              <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n                setNewReview(e.target.value)\n              } }/>\n              <button onClick={() => { updateReview(val.GenreId) }}> Update</button>\n              </div>\n          );\n          \n          ;\n        })}\n        \n        \n\n      </div>\n\n      <div className=\"form\">\n        <label> Search Genre Type:</label>\n        <input type=\"text\" name=\"searchGenreList\" onChange={(e) => {\n          setSearchGenre(e.target.value)\n        }}/>\n        \n        <button onClick={searchGenre}> Search</button>\n\n        {GenreList.map((val) => {\n          return (\n            <div className = \"card\">\n              <h1> Genre Id: {val.GenreId} </h1>\n              <p>Genre Type: {val.GenreType}</p>\n              <button onClick={() => { deleteReview(val.GenreId) }}> Delete</button>\n              <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n                setNewReview(e.target.value)\n              } }/>\n              <button onClick={() => { updateReview(val.GenreId) }}> Update</button>\n              </div>\n          );\n          \n          ;\n        })}\n      </div>\n\n      <div className=\"form\">\n\n        <label>Find movies' top favorite genre type and frequencies in this dataset</label>\n        \n        <button onClick={findActorDirector}> Find</button>\n\n        <h2>Most Used Genres</h2>\n\n        {favList.map((val) => {\n          return (\n            <h5>{val.GenreType}  {val.freq}</h5>\n          );         \n          ;\n        })}\n      </div>\n\n      \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}