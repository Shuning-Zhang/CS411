{"ast":null,"code":"import'./App.css';import{BrowserRouter as Router,Switch,Route,Link}from\"react-router-dom\";import React,{useState,useEffect}from\"react\";import Axios from'axios';import Signup from'./Pages/Signup';import Login from'./Pages/Login';import Navbar from'./Components/Navbar';import Movies from'./Pages/Movies';import Genre from'./Pages/Genre';import User from'./Pages/User';import Directors from'./Pages/Directors';import Actors from'./Pages/Actors';import Search from'./Pages/Search';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// const [movieName, setMovieName] = useState(0);\n// const [Review, setReview] = useState('');\n// const [searchActorList, setSearchActor] = useState('');\n// const [movieReviewList, setMovieReviewList] = useState([]);\n// const [actorList, setActorList] = useState([]);\n// const [favList, setFavList] = useState([]);\n// const [newReview, setNewReview] = useState(\"\");\n// useEffect(() => {\n//   Axios.get('http://localhost:3002/api/get').then((response) => {\n//     setMovieReviewList(response.data)\n//   })\n// },[])\n// const submitReview = () => { \n//   Axios.post('http://localhost:3002/api/insert', {\n//     ActorId: movieName,\n//     ActorName: Review\n//   });\n//   setMovieReviewList([\n//     ...movieReviewList,\n//     {\n//       ActorId: movieName,\n//       ActorName: Review\n//     },\n//   ]);\n// };\n// const searchActor = () => { \n//   Axios.post('http://localhost:3002/api/search', {\n//     ActorName: searchActorList\n//   }).then((response) => {setActorList(response.data)});\n// };\n// const findActorDirector = () => { \n//   Axios.get('http://localhost:3002/api/find').then((response) => \n//   {setFavList(response.data)});\n// };\n// const deleteReview = (ActorId) => {\n//   Axios.delete(`http://localhost:3002/api/delete/${ActorId}`);\n// };\n// const updateReview = (movieName) => {\n//   Axios.put(`http://localhost:3002/api/update`, {\n//     ActorId: movieName,\n//     ActorName: newReview\n//   });\n//   setNewReview(\"\")\n// };\nreturn/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,component:Signup}),/*#__PURE__*/_jsx(Route,{path:\"/login\",exact:true,component:Login}),/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Route,{path:\"/movies\",exact:true,component:Movies}),/*#__PURE__*/_jsx(Route,{path:\"/actors\",exact:true,component:Actors}),/*#__PURE__*/_jsx(Route,{path:\"/directors\",exact:true,component:Directors}),/*#__PURE__*/_jsx(Route,{path:\"/genre\",exact:true,component:Genre}),/*#__PURE__*/_jsx(Route,{path:\"/search\",exact:true,component:Search}),/*#__PURE__*/_jsx(Route,{path:\"/user/:UserId\",component:User})]})]})})// <div className=\"App\">\n//   <h1> CRUD APPLICATIONS</h1>\n//   <div className=\"form\">\n//     <label> Actor Id:</label>\n//     <input type=\"text\" name=\"movieName\" onChange={(e) => {\n//       setMovieName(parseInt(e.target.value))\n//     } }/>\n//     <label> Actor Name:</label>\n//     <input type=\"text\" name=\"Review\" onChange={(e) => {\n//       setReview(e.target.value)\n//     }}/>\n//     <button onClick={submitReview}> Submit</button>\n//     {movieReviewList.map((val) => {\n//       return (\n//         <div className = \"card\">\n//           <h1> Actor Id: {val.ActorId} </h1>\n//           <p>Actor Name: {val.ActorName}</p>\n//           <button onClick={() => { deleteReview(val.ActorId) }}> Delete</button>\n//           <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n//             setNewReview(e.target.value)\n//           } }/>\n//           <button onClick={() => { updateReview(val.ActorId) }}> Update</button>\n//           </div>\n//       );\n//       ;\n//     })}\n//   </div>\n//   <div className=\"form\">\n//     <label> Search Actor Name:</label>\n//     <input type=\"text\" name=\"searchActorList\" onChange={(e) => {\n//       setSearchActor(e.target.value)\n//     }}/>\n//     <button onClick={searchActor}> Search</button>\n//     {actorList.map((val) => {\n//       return (\n//         <div className = \"card\">\n//           <h1> Actor Id: {val.ActorId} </h1>\n//           <p>Actor Name: {val.ActorName}</p>\n//           <button onClick={() => { deleteReview(val.ActorId) }}> Delete</button>\n//           <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n//             setNewReview(e.target.value)\n//           } }/>\n//           <button onClick={() => { updateReview(val.ActorId) }}> Update</button>\n//           </div>\n//       );\n//       ;\n//     })}\n//   </div>\n//   <div className=\"form\">\n//     <h2>Find top 15 favorite actors and directors</h2>\n//     <button onClick={findActorDirector}> Find</button>\n//     <table>\n//           <tr>\n//             <th>Name</th>\n//             <th>Count</th>\n//           </tr>\n//     {favList.map((val) => {\n//       return ( \n//           <tr>\n//             <td>{val.Name}</td>\n//             <td>{val.Count}</td>\n//           </tr>\n//       );      \n//       ;\n//     })}\n//     </table>\n//   </div>\n// </div>\n;}export default App;","map":{"version":3,"sources":["/Users/savanna/Desktop/stage4/frontend/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Link","React","useState","useEffect","Axios","Signup","Login","Navbar","Movies","Genre","User","Directors","Actors","Search","App"],"mappings":"AAAA,MAAO,WAAP,CACA,OAASA,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,CAAiDC,IAAjD,KAA6D,kBAA7D,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,C,6IAEA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACI,KAAC,MAAD,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,CAAsB,SAAS,CAAET,MAAjC,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,KAA1B,CAA2B,SAAS,CAAEC,KAAtC,EAFF,cAIE,wCACE,KAAC,MAAD,IADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,KAAK,KAA3B,CAA4B,SAAS,CAAEE,MAAvC,EAFF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,KAAK,KAA3B,CAA4B,SAAS,CAAEI,MAAvC,EAHF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CAAyB,KAAK,KAA9B,CAA+B,SAAS,CAAED,SAA1C,EAJF,cAKE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,KAA1B,CAA2B,SAAS,CAAEF,KAAtC,EALF,cAME,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,KAAK,KAA3B,CAA4B,SAAS,CAAEI,MAAvC,EANF,cAOE,KAAC,KAAD,EAAO,IAAI,CAAC,eAAZ,CAA4B,SAAS,CAAEH,IAAvC,EAPF,GAJF,GADF,EAmBF;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AA1GF,CA4GD,CAED,cAAeI,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport React, {useState, useEffect} from \"react\";\nimport Axios from 'axios';\nimport Signup from './Pages/Signup';\nimport Login from './Pages/Login';\nimport Navbar from './Components/Navbar'\nimport Movies from './Pages/Movies';\nimport Genre from './Pages/Genre';\nimport User from './Pages/User';\nimport Directors from './Pages/Directors';\nimport Actors from './Pages/Actors';\nimport Search from './Pages/Search';\n\nfunction App() {\n  // const [movieName, setMovieName] = useState(0);\n  // const [Review, setReview] = useState('');\n  // const [searchActorList, setSearchActor] = useState('');\n  // const [movieReviewList, setMovieReviewList] = useState([]);\n  // const [actorList, setActorList] = useState([]);\n  // const [favList, setFavList] = useState([]);\n  // const [newReview, setNewReview] = useState(\"\");\n\n  // useEffect(() => {\n  //   Axios.get('http://localhost:3002/api/get').then((response) => {\n  //     setMovieReviewList(response.data)\n  //   })\n  // },[])\n\n  // const submitReview = () => { \n  //   Axios.post('http://localhost:3002/api/insert', {\n  //     ActorId: movieName,\n  //     ActorName: Review\n  //   });\n    \n  //   setMovieReviewList([\n  //     ...movieReviewList,\n  //     {\n  //       ActorId: movieName,\n  //       ActorName: Review\n  //     },\n  //   ]);\n  // };\n\n  // const searchActor = () => { \n  //   Axios.post('http://localhost:3002/api/search', {\n  //     ActorName: searchActorList\n  //   }).then((response) => {setActorList(response.data)});\n  // };\n\n  // const findActorDirector = () => { \n  //   Axios.get('http://localhost:3002/api/find').then((response) => \n  //   {setFavList(response.data)});\n  // };\n\n  // const deleteReview = (ActorId) => {\n  //   Axios.delete(`http://localhost:3002/api/delete/${ActorId}`);\n  // };\n\n  // const updateReview = (movieName) => {\n  //   Axios.put(`http://localhost:3002/api/update`, {\n  //     ActorId: movieName,\n  //     ActorName: newReview\n  //   });\n  //   setNewReview(\"\")\n  // };\n\n  return (    \n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Signup} />\n          <Route path=\"/login\" exact component={Login} />\n\n          <>\n            <Navbar />\n            <Route path=\"/movies\" exact component={Movies} />\n            <Route path=\"/actors\" exact component={Actors} />\n            <Route path=\"/directors\" exact component={Directors} />\n            <Route path=\"/genre\" exact component={Genre} />\n            <Route path=\"/search\" exact component={Search} />\n            <Route path=\"/user/:UserId\" component={User} />\n          </>      \n          \n        </Switch>\n      </Router>\n\n\n    // <div className=\"App\">\n    //   <h1> CRUD APPLICATIONS</h1>\n\n    //   <div className=\"form\">\n    //     <label> Actor Id:</label>\n    //     <input type=\"text\" name=\"movieName\" onChange={(e) => {\n    //       setMovieName(parseInt(e.target.value))\n    //     } }/>\n    //     <label> Actor Name:</label>\n    //     <input type=\"text\" name=\"Review\" onChange={(e) => {\n    //       setReview(e.target.value)\n    //     }}/>\n        \n    //     <button onClick={submitReview}> Submit</button>\n\n    //     {movieReviewList.map((val) => {\n    //       return (\n    //         <div className = \"card\">\n    //           <h1> Actor Id: {val.ActorId} </h1>\n    //           <p>Actor Name: {val.ActorName}</p>\n    //           <button onClick={() => { deleteReview(val.ActorId) }}> Delete</button>\n    //           <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n    //             setNewReview(e.target.value)\n    //           } }/>\n    //           <button onClick={() => { updateReview(val.ActorId) }}> Update</button>\n    //           </div>\n    //       );\n          \n    //       ;\n    //     })}\n        \n        \n\n    //   </div>\n\n    //   <div className=\"form\">\n    //     <label> Search Actor Name:</label>\n    //     <input type=\"text\" name=\"searchActorList\" onChange={(e) => {\n    //       setSearchActor(e.target.value)\n    //     }}/>\n        \n    //     <button onClick={searchActor}> Search</button>\n\n    //     {actorList.map((val) => {\n    //       return (\n    //         <div className = \"card\">\n    //           <h1> Actor Id: {val.ActorId} </h1>\n    //           <p>Actor Name: {val.ActorName}</p>\n    //           <button onClick={() => { deleteReview(val.ActorId) }}> Delete</button>\n    //           <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n    //             setNewReview(e.target.value)\n    //           } }/>\n    //           <button onClick={() => { updateReview(val.ActorId) }}> Update</button>\n    //           </div>\n    //       );\n          \n    //       ;\n    //     })}\n    //   </div>\n\n    //   <div className=\"form\">\n\n    //     <h2>Find top 15 favorite actors and directors</h2>\n        \n    //     <button onClick={findActorDirector}> Find</button>\n\n    //     <table>\n    //           <tr>\n    //             <th>Name</th>\n    //             <th>Count</th>\n    //           </tr>\n    //     {favList.map((val) => {\n    //       return ( \n    //           <tr>\n    //             <td>{val.Name}</td>\n    //             <td>{val.Count}</td>\n    //           </tr>\n        \n    //       );      \n\n    //       ;\n    //     })}\n    //     </table>\n    //   </div>\n\n      \n    // </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}