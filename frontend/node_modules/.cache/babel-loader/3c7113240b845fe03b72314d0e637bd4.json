{"ast":null,"code":"var _jsxFileName = \"/Users/savanna/Desktop/stage4/frontend/src/App.js\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport Signup from './Pages/Signup';\nimport Login from './Pages/Login';\nimport Navbar from './Components/Navbar';\nimport Movies from './Pages/Movies';\nimport Search from './Pages/Search';\nimport User from './Pages/User';\nimport Directors from './Pages/Directors';\nimport Actors from './Pages/Actors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [movieName, setMovieName] = useState(0);\n  // const [Review, setReview] = useState('');\n  // const [searchActorList, setSearchActor] = useState('');\n  // const [movieReviewList, setMovieReviewList] = useState([]);\n  // const [actorList, setActorList] = useState([]);\n  // const [favList, setFavList] = useState([]);\n  // const [newReview, setNewReview] = useState(\"\");\n  // useEffect(() => {\n  //   Axios.get('http://localhost:3002/api/get').then((response) => {\n  //     setMovieReviewList(response.data)\n  //   })\n  // },[])\n  // const submitReview = () => { \n  //   Axios.post('http://localhost:3002/api/insert', {\n  //     ActorId: movieName,\n  //     ActorName: Review\n  //   });\n  //   setMovieReviewList([\n  //     ...movieReviewList,\n  //     {\n  //       ActorId: movieName,\n  //       ActorName: Review\n  //     },\n  //   ]);\n  // };\n  // const searchActor = () => { \n  //   Axios.post('http://localhost:3002/api/search', {\n  //     ActorName: searchActorList\n  //   }).then((response) => {setActorList(response.data)});\n  // };\n  // const findActorDirector = () => { \n  //   Axios.get('http://localhost:3002/api/find').then((response) => \n  //   {setFavList(response.data)});\n  // };\n  // const deleteReview = (ActorId) => {\n  //   Axios.delete(`http://localhost:3002/api/delete/${ActorId}`);\n  // };\n  // const updateReview = (movieName) => {\n  //   Axios.put(`http://localhost:3002/api/update`, {\n  //     ActorId: movieName,\n  //     ActorName: newReview\n  //   });\n  //   setNewReview(\"\")\n  // };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Signup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        exact: true,\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          exact: true,\n          component: Movies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/actors\",\n          exact: true,\n          component: Actors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/directors\",\n          exact: true,\n          component: Directors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/search\",\n          exact: true,\n          component: Search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/:UserId\",\n          component: User\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this) // <div className=\"App\">\n  //   <h1> CRUD APPLICATIONS</h1>\n  //   <div className=\"form\">\n  //     <label> Actor Id:</label>\n  //     <input type=\"text\" name=\"movieName\" onChange={(e) => {\n  //       setMovieName(parseInt(e.target.value))\n  //     } }/>\n  //     <label> Actor Name:</label>\n  //     <input type=\"text\" name=\"Review\" onChange={(e) => {\n  //       setReview(e.target.value)\n  //     }}/>\n  //     <button onClick={submitReview}> Submit</button>\n  //     {movieReviewList.map((val) => {\n  //       return (\n  //         <div className = \"card\">\n  //           <h1> Actor Id: {val.ActorId} </h1>\n  //           <p>Actor Name: {val.ActorName}</p>\n  //           <button onClick={() => { deleteReview(val.ActorId) }}> Delete</button>\n  //           <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n  //             setNewReview(e.target.value)\n  //           } }/>\n  //           <button onClick={() => { updateReview(val.ActorId) }}> Update</button>\n  //           </div>\n  //       );\n  //       ;\n  //     })}\n  //   </div>\n  //   <div className=\"form\">\n  //     <label> Search Actor Name:</label>\n  //     <input type=\"text\" name=\"searchActorList\" onChange={(e) => {\n  //       setSearchActor(e.target.value)\n  //     }}/>\n  //     <button onClick={searchActor}> Search</button>\n  //     {actorList.map((val) => {\n  //       return (\n  //         <div className = \"card\">\n  //           <h1> Actor Id: {val.ActorId} </h1>\n  //           <p>Actor Name: {val.ActorName}</p>\n  //           <button onClick={() => { deleteReview(val.ActorId) }}> Delete</button>\n  //           <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n  //             setNewReview(e.target.value)\n  //           } }/>\n  //           <button onClick={() => { updateReview(val.ActorId) }}> Update</button>\n  //           </div>\n  //       );\n  //       ;\n  //     })}\n  //   </div>\n  //   <div className=\"form\">\n  //     <h2>Find top 15 favorite actors and directors</h2>\n  //     <button onClick={findActorDirector}> Find</button>\n  //     <table>\n  //           <tr>\n  //             <th>Name</th>\n  //             <th>Count</th>\n  //           </tr>\n  //     {favList.map((val) => {\n  //       return ( \n  //           <tr>\n  //             <td>{val.Name}</td>\n  //             <td>{val.Count}</td>\n  //           </tr>\n  //       );      \n  //       ;\n  //     })}\n  //     </table>\n  //   </div>\n  // </div>\n  ;\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/savanna/Desktop/stage4/frontend/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Link","React","useState","useEffect","Axios","Signup","Login","Navbar","Movies","Search","User","Directors","Actors","App"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;;;AAEA,SAASC,GAAT,GAAe;AAIb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAER;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,MAA1B;AAA2B,QAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,SAAS,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,SAAS,EAAEI;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,KAAK,MAA9B;AAA+B,UAAA,SAAS,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,SAAS,EAAEF;AAAvC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ,CAmBE;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAzGF;AA2GD;;KAnKQG,G;AAqKT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport React, {useState, useEffect} from \"react\";\nimport Axios from 'axios';\nimport Signup from './Pages/Signup';\nimport Login from './Pages/Login';\nimport Navbar from './Components/Navbar'\nimport Movies from './Pages/Movies';\nimport Search from './Pages/Search';\nimport User from './Pages/User';\nimport Directors from './Pages/Directors';\nimport Actors from './Pages/Actors';\n\nfunction App() {\n\n\n\n  // const [movieName, setMovieName] = useState(0);\n  // const [Review, setReview] = useState('');\n  // const [searchActorList, setSearchActor] = useState('');\n  // const [movieReviewList, setMovieReviewList] = useState([]);\n  // const [actorList, setActorList] = useState([]);\n  // const [favList, setFavList] = useState([]);\n  // const [newReview, setNewReview] = useState(\"\");\n\n  // useEffect(() => {\n  //   Axios.get('http://localhost:3002/api/get').then((response) => {\n  //     setMovieReviewList(response.data)\n  //   })\n  // },[])\n\n  // const submitReview = () => { \n  //   Axios.post('http://localhost:3002/api/insert', {\n  //     ActorId: movieName,\n  //     ActorName: Review\n  //   });\n    \n  //   setMovieReviewList([\n  //     ...movieReviewList,\n  //     {\n  //       ActorId: movieName,\n  //       ActorName: Review\n  //     },\n  //   ]);\n  // };\n\n  // const searchActor = () => { \n  //   Axios.post('http://localhost:3002/api/search', {\n  //     ActorName: searchActorList\n  //   }).then((response) => {setActorList(response.data)});\n  // };\n\n  // const findActorDirector = () => { \n  //   Axios.get('http://localhost:3002/api/find').then((response) => \n  //   {setFavList(response.data)});\n  // };\n\n  // const deleteReview = (ActorId) => {\n  //   Axios.delete(`http://localhost:3002/api/delete/${ActorId}`);\n  // };\n\n  // const updateReview = (movieName) => {\n  //   Axios.put(`http://localhost:3002/api/update`, {\n  //     ActorId: movieName,\n  //     ActorName: newReview\n  //   });\n  //   setNewReview(\"\")\n  // };\n\n  return (    \n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Signup} />\n          <Route path=\"/login\" exact component={Login} />\n\n          <>\n            <Navbar />\n            <Route path=\"/movies\" exact component={Movies} />\n            <Route path=\"/actors\" exact component={Actors} />\n            <Route path=\"/directors\" exact component={Directors} />\n            <Route path=\"/search\" exact component={Search} />\n            <Route path=\"/user/:UserId\" component={User} />\n          </>      \n          \n        </Switch>\n      </Router>\n\n\n    // <div className=\"App\">\n    //   <h1> CRUD APPLICATIONS</h1>\n\n    //   <div className=\"form\">\n    //     <label> Actor Id:</label>\n    //     <input type=\"text\" name=\"movieName\" onChange={(e) => {\n    //       setMovieName(parseInt(e.target.value))\n    //     } }/>\n    //     <label> Actor Name:</label>\n    //     <input type=\"text\" name=\"Review\" onChange={(e) => {\n    //       setReview(e.target.value)\n    //     }}/>\n        \n    //     <button onClick={submitReview}> Submit</button>\n\n    //     {movieReviewList.map((val) => {\n    //       return (\n    //         <div className = \"card\">\n    //           <h1> Actor Id: {val.ActorId} </h1>\n    //           <p>Actor Name: {val.ActorName}</p>\n    //           <button onClick={() => { deleteReview(val.ActorId) }}> Delete</button>\n    //           <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n    //             setNewReview(e.target.value)\n    //           } }/>\n    //           <button onClick={() => { updateReview(val.ActorId) }}> Update</button>\n    //           </div>\n    //       );\n          \n    //       ;\n    //     })}\n        \n        \n\n    //   </div>\n\n    //   <div className=\"form\">\n    //     <label> Search Actor Name:</label>\n    //     <input type=\"text\" name=\"searchActorList\" onChange={(e) => {\n    //       setSearchActor(e.target.value)\n    //     }}/>\n        \n    //     <button onClick={searchActor}> Search</button>\n\n    //     {actorList.map((val) => {\n    //       return (\n    //         <div className = \"card\">\n    //           <h1> Actor Id: {val.ActorId} </h1>\n    //           <p>Actor Name: {val.ActorName}</p>\n    //           <button onClick={() => { deleteReview(val.ActorId) }}> Delete</button>\n    //           <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n    //             setNewReview(e.target.value)\n    //           } }/>\n    //           <button onClick={() => { updateReview(val.ActorId) }}> Update</button>\n    //           </div>\n    //       );\n          \n    //       ;\n    //     })}\n    //   </div>\n\n    //   <div className=\"form\">\n\n    //     <h2>Find top 15 favorite actors and directors</h2>\n        \n    //     <button onClick={findActorDirector}> Find</button>\n\n    //     <table>\n    //           <tr>\n    //             <th>Name</th>\n    //             <th>Count</th>\n    //           </tr>\n    //     {favList.map((val) => {\n    //       return ( \n    //           <tr>\n    //             <td>{val.Name}</td>\n    //             <td>{val.Count}</td>\n    //           </tr>\n        \n    //       );      \n\n    //       ;\n    //     })}\n    //     </table>\n    //   </div>\n\n      \n    // </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}